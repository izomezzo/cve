/**
 *  
 */
package politse.entity;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;

import static javax.persistence.CascadeType.ALL;

import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;

import static javax.persistence.TemporalType.TIMESTAMP;

import javax.persistence.Transient;
import javax.enterprise.context.RequestScoped;
import javax.faces.bean.SessionScoped;
import javax.inject.Named;



@Entity
@Table(name="Parliament")
@NamedQuery(
    name="findAllParliaments",
    query="SELECT p FROM Parliament p " +
          "ORDER BY p"
)


public class Parliament implements java.io.Serializable {
 /**
	 * 
	 */
	private static final long serialVersionUID = -5981133240593938392L;
	@Id
    private String parliamentId;
    private char status;
    @Temporal(TIMESTAMP)
    private Date lastUpdate;
    private Collection<Party> parties;
    
    public Parliament() {
        this.lastUpdate = new Date();
    }
    
    public Parliament(String parliamentId) {
        this.parliamentId = parliamentId;
        this.lastUpdate = new Date();
        this.parties = new ArrayList<>();
    }
    
    
    public String getParliamentId() {
        return parliamentId;
    }
    
    public void setParliamentId(String parliamentId) {
        this.parliamentId = parliamentId;
    }
    
    
   
    public Date getLastUpdate() {
        return lastUpdate;
    }
    
    public void setLastUpdate(Date lastUpdate) {
        this.lastUpdate = lastUpdate;
    }
    
    public void setStatus(char status)
    {
    	this.status = status;
    }
    
    public char getStatus()
    {
    	return status;
    }
    
    @OneToMany(cascade=ALL, mappedBy="parliament")
    public Collection<Party> getParties() {
        return parties;
    }
    
    public void setParties(Collection<Party> parties) {
        this.parties = parties;
    }


  /*  public void addParty(Party party) {
      //  this.getParty().add(party);
    }*/
    
    @Transient
    public int getNextParty() {
        return this.parties.size() + 1;
    }
}
