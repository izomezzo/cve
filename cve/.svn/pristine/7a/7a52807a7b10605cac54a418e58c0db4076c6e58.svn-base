package politse.entity;

import static javax.persistence.CascadeType.ALL;
import static javax.persistence.TemporalType.TIMESTAMP;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.JoinColumn;

@Entity
@Table(name="Portfolio")
@NamedQueries({
@NamedQuery(
    name="findPortfolioByTrader",
    query="SELECT p FROM Portfolio p" +
    " WHERE p.trader = :trader" + 
    " ORDER BY p.lastUpdate"
),
 @NamedQuery(
	name="findPortfolioByMember",
	query="SELECT p FROM Portfolio p" +
	" WHERE p.member = :member " +
	"AND p.trader = :trader"
)
})
public class Portfolio implements Serializable{
	
	/**
	 * 
	 */
	private static final long serialVersionUID = -840937667991141455L;
	@Id
	@GeneratedValue
    private Integer portfolioId;
	@Temporal(TIMESTAMP)
    private Date lastUpdate;
	private Integer balance;
	private Trader trader;
	private Member member;
	
	public Portfolio() {
		
		this.lastUpdate = new Date();
	}
	public Portfolio(Integer balance, Member member) {
		
		this.lastUpdate =  new Date();
		this.balance = balance;
		this.member = member;
	}
	
	public Integer getPortfolioId() {
		return portfolioId;
	}

	public void setPortfolioId(Integer portfolioId) {
		this.portfolioId = portfolioId;
	}

	public Date getLastUpdate() {
		return lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	@ManyToOne
	public Member getMember() {
		return member;
	}

	public void setMember(Member member) {
		this.member = member;
	}

	@ManyToOne(cascade=ALL)
    public Trader getTrader() 
    {
        return trader;
    }
    
    public void setTrader(Trader trader)
    {
    	this.trader = trader;
    }

	public Integer getBalance() {
		return balance;
	}

	public void setBalance(Integer balance) {
		this.balance = balance;
	}

	public void addMember(Member member) {
        this.member = member;
    }
}
