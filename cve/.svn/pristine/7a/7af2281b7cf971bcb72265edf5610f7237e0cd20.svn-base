package politse.web;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import politse.entity.AskOrder;
import politse.entity.BidOrder;
import politse.entity.Portfolio;
import politse.entity.User;

@ManagedBean
@SessionScoped
public class PortfolioView implements Serializable {

	private static final long serialVersionUID = -576366089588731944L;
	private static final Logger logger = Logger.getLogger("politse.web.PortfolioView");
	private Collection<Portfolio> portfolios;
	@EJB
    private politse.ejb.RequestBean request;
	private User user;
	private String userId;
	private Collection<AskOrder> askOrders;
	private Collection<BidOrder> bidOrders;
	
	@PostConstruct
    public void postInit() {
      logger.log(Level.INFO,"Session started");
      ExternalContext externalContext = FacesContext.getCurrentInstance().getExternalContext();
      Map<String, Object> sessionMap = externalContext.getSessionMap();
      
      user = (User) sessionMap.get("user");
      setUserId(user.getUserId());
      logger.log(Level.INFO, "user trader is: {0}", 
    		  new Object[]{user.getTrader().getTraderId().toString()});
   
      findPortfolios();
      findAskOrders();
      findBidOrders();
    }
	
	public void findPortfolios(){	
		portfolios = request.findActivePortfoliosByTrader(user.getTrader().getTraderId().toString());
	}
	
	public void findAskOrders(){
		askOrders = request.findActiveAskOrdersByTrader(user.getTrader());
	}
	
	public void findBidOrders(){
		setBidOrders(request.findActiveBidOrdersByTrader(user.getTrader()));
	}
	
	public Collection<Portfolio> getPortfolios() {
		return portfolios;
	}
	public void setPortfolios(Collection<Portfolio> portfolios) {
		this.portfolios = portfolios;
	}

	public Collection<AskOrder> getAskOrders() {
		return askOrders;
	}

	public void setAskOrders(Collection<AskOrder> askOrders) {
		this.askOrders = askOrders;
	}

	public String getUserId() {
		return userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	public Collection<BidOrder> getBidOrders() {
		return bidOrders;
	}

	public void setBidOrders(Collection<BidOrder> bidOrders) {
		this.bidOrders = bidOrders;
	}

}
